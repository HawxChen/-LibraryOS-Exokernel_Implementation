Problem:
Note "Prob:" tag.
1. Why does lib/string.h have no prototype for memcpy?
    Platform dependent?!

2. Load ELF
   filesz memsz.
   load into address space:  filesz
   Execute at address space: memsz
   How did the text work live in (extension)range memsz?
       alloc variables?

3. What's about UVPT for?
   UVPT is for what usage.
   Note UVPT use the the lec4. skill backpointer to itself.
   
4. Assume for this function that no two segments will touch
   the same virtual page.
   xv6 assume it, too.
   But if not, how did it map?

5. what's about the 'size' parameter for?
   env_create (uint8_t * binary, size_t size, enum EnvType type))
       load_icode (struct Env *e, uint8_t * binary, size_t size))

6. why can't I use gdb to browse some variables

7. why did it not have fs/gs?

8. If a page fault is caused by a page-level protection, 
   the access flag in the page-directory is set when the fault occurs.
   
9.Differences about Call Gate/ Trap Gate/ Int Gat /Task Gate 
  IDT must not contain Call Gate
  INT Gate will clear IF bit at eflag bit, but Trap Gate won't.

10. lib/entry.S
     // See if we were started with arguments on the stack
      cmpl $USTACKTOP, %esp
      jne args_exist
11. Setup Gate
    trap_init_percpu
        setup idt entries
    trap_init
        setup  TSS
        load task_reg
        load idt table

    env.c
        struct Segdesc gdt[] = {]
        }
12 why
    26 extern void *syscall_handler(void);
    27 //extern void *syscall_handler;
